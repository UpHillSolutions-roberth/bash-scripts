#!/bin/bash

# Source the formatting functions
source "$(dirname "$0")/bash_utilities"

# Function to display help information
show_help() {
  print_title "HELP INFORMATION"
  print_header "Usage: $(basename "$0") [options] [file|URL]"
  echo "This script downloads audio from YouTube URLs provided in a file or a single URL."
  echo "Downloaded audio files will be saved in the specified output directory or the current directory if not provided."
  print_header "Options:"
  echo -e "  $(color_bold_blue "-o [directory]")      Specify the output directory for downloaded audio files."
  echo -e "  $(color_bold_blue "[file]")              A text file containing YouTube URLs (one per line)."
  echo -e "  $(color_bold_blue "[URL]")               A single YouTube URL or playlist to download audio from."
  print_header "Examples:"
  echo -e "  $(color_blue "$(basename "$0") -o /path/to/output /path/to/urls.txt")               Download audio from all URLs listed in 'urls.txt' to the specified output directory."
  echo -e "  $(color_blue "$(basename "$0") -o /path/to/output https://youtube.com/watch?v=dQw4w9WgXcQ")   Download audio from the specified YouTube URL to the specified output directory."
  echo -e "  $(color_blue "$(basename "$0") /path/to/urls.txt")                                    Download audio from all URLs listed in 'urls.txt' to the current directory."
  echo -e "  $(color_blue "$(basename "$0") https://youtube.com/watch?v=dQw4w9WgXcQ")            Download audio from the specified YouTube URL to the current directory."
  exit 0
}

# Check for help option
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
  show_help
fi

# Parse options
output_directory="."
while getopts "o:" opt; do
  case $opt in
    o)
      output_directory="$OPTARG"
      ;;
    *)
      show_help
      ;;
  esac
done

# Shift the arguments so we can check for file or URL
shift $((OPTIND - 1))

# Check if the argument is a file
if [ -f "$1" ]; then
  # Read URLs from the file and download each
  while IFS= read -r url; do
    echo "Downloading audio from: $url" # Echo for each URL being processed
    yt-dlp -x --audio-format mp3 --embed-thumbnail -o "$output_directory/%(title)s.%(ext)s" "$url"
  done < "$1"
else
  # Single URL
  echo "Downloading audio from: $1" # Echo for the single URL
  yt-dlp -x --audio-format mp3 --embed-thumbnail -o "$output_directory/%(title)s.%(ext)s" "$1"
fi

print_title "DOWNLOADS COMPLETE"
echo "Downloaded audio files are located in: $output_directory"
