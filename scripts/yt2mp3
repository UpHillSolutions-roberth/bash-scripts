#!/bin/bash

# Source the formatting functions
source "$(dirname "$0")/bash_utilities"

# Function to display help information
show_help() {
  print_title "HELP INFORMATION"
  print_header "Usage: $(basename "$0") [options] [file|URL]"
  printf "${CYAN}This script downloads audio from YouTube URLs provided in a file or a single URL.${ENDL}"
  printf "${CYAN}Downloaded audio files will be saved in the specified output directory or the current directory if not provided.${ENDL}"
  
  print_header "Options:"
  printf "  ${BOLD_BLUE}-o [directory]${ENDL}      Specify the output directory for downloaded audio files."
  printf "  ${BOLD_BLUE}[file]${ENDL}              A text file containing YouTube URLs (one per line)."
  printf "  ${BOLD_BLUE}[URL]${ENDL}               A single YouTube URL or playlist to download audio from."
  
  print_header "Examples:"
  printf "  ${BLUE}$(basename "$0") -o /path/to/output /path/to/urls.txt${ENDL}               Download audio from all URLs listed in 'urls.txt' to the specified output directory."
  printf "  ${BLUE}$(basename "$0") -o /path/to/output https://youtube.com/watch?v=dQw4w9WgXcQ${ENDL}   Download audio from the specified YouTube URL to the specified output directory."
  printf "  ${BLUE}$(basename "$0") /path/to/urls.txt${ENDL}                                    Download audio from all URLs listed in 'urls.txt' to the current directory."
  printf "  ${BLUE}$(basename "$0") https://youtube.com/watch?v=dQw4w9WgXcQ${ENDL}            Download audio from the specified YouTube URL to the current directory."
  exit 0
}

# Check for help option
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
  show_help
fi

# Parse options
output_directory="."
while [[ "$#" -gt 0 ]]; do
  case "$1" in
    -o|--output)
      output_directory="$2"
      shift 2 # Move past the option and the argument
      ;;
    *)
      break # Exit the loop if the option is not recognized
      ;;
  esac
done

# Check if the next argument is a file or URL
if [ -f "$1" ]; then
  # Read URLs from the file and download each
  while IFS= read -r url; do
    echo "Downloading audio from: $url"
    yt-dlp -x --audio-format mp3 --embed-thumbnail -o "$output_directory/%(title)s.%(ext)s" "$url"
  done < "$1"
else
  # Single URL
  echo "Downloading audio from: $1" # Echo for the single URL
  yt-dlp -x --audio-format mp3 --embed-thumbnail -o "$output_directory/%(title)s.%(ext)s" "$1"
fi

print_title "DOWNLOADS COMPLETE"
echo "Downloaded audio files are located in: $output_directory"

